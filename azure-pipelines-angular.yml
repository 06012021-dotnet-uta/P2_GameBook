trigger:
  - main
pr: none

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'P2Folder/AngularGameBook'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarcloudAngular'
    organization: 'project2-gamebook'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'Project2-GameBook_AngularGameBook'
    cliProjectName: 'AngularGameBook'
    cliSources: '$(solution)/src'
    extraProperties: 'sonar.javascript.lcov.reportPaths=$(solution)/coverage/AngularGameBook/lcov.info'

- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Install Node.js'

- task: Npm@1
  displayName: 'NPM Install'
  inputs:
    command: 'install'
    workingDir: $(solution)

- task: Npm@1
  displayName: 'NPM Build Angular'
  inputs:
    command: 'custom'
    workingDir: $(solution)
    customCommand: 'run build-prod'

- task: Npm@1
  displayName: 'NPM Test'
  inputs:
    command: 'custom'
    workingDir: $(solution)
    customCommand: 'run test-headless'

- task: SonarCloudAnalyze@1
  displayName: 'SonarCloud Analyze'

- task: SonarCloudPublish@1
  displayName: 'SonarCloud Publish'
  inputs:
    pollingTimeoutSec: '300'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(solution)/dist'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'dist'
    publishLocation: 'Container'
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(d6c8a8b1-d080-451c-a2a1-87677bde0d9f)'
    appType: 'webApp'
    WebAppName: 'Game-Book'
    deployToSlotOrASE: true
    ResourceGroupName: 'GameBookResourceGroup'
    SlotName: 'production'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'